import xlrd 
import numpy as np

OccA_workbook=xlrd.open_workbook("sata.xlsx") 
OccA_sheet=OccA_workbook.sheets()[0] 

OccB_workbook=xlrd.open_workbook("satb.xlsx")
OccB_sheet=OccB_workbook.sheets()[0]
K=259200
LLA=np.zeros((K,3)) #List containing Longitude, Latitude and Altitude

for i in range(K):
    SatA=OccA_sheet.row_values(i) #save the data in list
    SatB=OccB_sheet.row_values(i)
    D=np.linalg.norm(np.cross(SatA,SatB))/np.linalg.norm([SatA[0]-SatB[0],SatA[1]-SatB[1],SatA[2]-SatB[2]])
    #Calculate the shortest distance between line AB and C
  
    a=[SatB[0] - SatA[0],SatB[1] - SatA[1],SatB[2] - SatA[2]] 
    t=-(np.dot(SatA,a))/(np.linalg.norm(a))**2 #parametric representation of a line
    x=SatA[0] + (SatB[0] - SatA[0]) *t 
    y=SatA[1] + (SatB[1] - SatA[1]) *t
    z=SatA[2] + (SatB[2] - SatA[2]) *t
    if(D<1737): 
        LLA[i]=[-1,-1,-1]
    elif(D<1837):
        if(y>0): 
            Lon=np.degrees(np.arccos(x/np.sqrt(x**2+y**2)))* 1
        else:
            Lon=np.degrees(np.arccos(x/np.sqrt(x**2+y**2))) * (-1)
        Lat = np.degrees(np.arcsin(z/np.sqrt(x**2 + y**2 + z**2)))
        A = np.sqrt(x**2 + y**2 + z**2)-1737 
        LLA[i]=[Lon,Lat,A]  #Save Lon,Lat and A into the list
    else:
        LLA[i]=[-1,-1,-1] 
#################################################################################################################
LLA_3d=[] 
LLA_alt=[] 
LLA_minalt=[] 
count=0 
flag=True 
for num in LLA:
    if num[2]>=0: 
        flag=True
        count=count+1 
        LLA_3d.append(num) 
        LLA_alt.append(num[2])
    else:
        flag=False 
        
    if flag is False and count>0: 
        minalt=min(LLA_alt) 
        position=LLA_alt.index(minalt) 
        LLA_minalt.append(LLA_3d[position]) 
        count=0 
        LLA_alt.clear() 
        LLA_3d.clear() 

LLA_minalt  
#################################################################################################### Plot
import matplotlib.pyplot as plt
Lon=[]
Lat=[]

for n in LLA_minalt: 
    Lon.append(n[0])
    Lat.append(n[1])

plt.style.use('dark_background')
plt.plot(Lon,Lat,"c.")  
plt.title('Radio Occultation Plot')

plt.show()
len(LLA_minalt)
