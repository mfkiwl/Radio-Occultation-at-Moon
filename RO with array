import pandas as pd
import numpy as np
dfA=pd.read_csv("sata.csv")
DFA=np.array(dfA)
dfB=pd.read_csv("satb.csv")
DFB=np.array(dfB)
K=259200
LLA=np.zeros((K,3)) 

for i in range(K):
    SatA=DFA[i]
    SatB=DFB[i]
    D=np.linalg.norm(np.cross(SatA,SatB))/np.linalg.norm([SatA[0]-SatB[0],SatA[1]-SatB[1],SatA[2]-SatB[2]])
    #Calculate the shortest distance between line AB and C
    a=[SatB[0]-SatA[0],SatB[1]-SatA[1],SatB[2]-SatA[2]]
    t=-(np.dot(SatA,a))/(np.linalg.norm(a))**2 #parametric representation of a line
    x=SatA[0] + (SatB[0] - SatA[0]) *t #Calculate the point on line AB that has shortest distance to center of moon
    y=SatA[1] + (SatB[1] - SatA[1]) *t
    z=SatA[2] + (SatB[2] - SatA[2]) *t
    if(D<1737):
        LLA[i]=[-1,-1,-1]
    elif(D<1837):
        if(y>0):
            Lon=np.arccos(x/np.sqrt(x**2+y**2))* 180 /np.pi * 1
        else:
            Lon=np.arccos(x/np.sqrt(x**2+y**2))* 180 /np.pi * (-1)
        Lat = np.arcsin(z/np.sqrt(x**2 + y**2 + z**2)) * 180 /np.pi;
        A = np.sqrt(x**2 + y**2 + z**2)-1737 #Altitude
        LLA[i]=[Lon,Lat,A]
    else:
        LLA[i]=[-1,-1,-1]
LLA_3d=[]
LLA_alt=[]
LLA_minalt=[]
count=0 
flag=True #Determine if we should end reading data and start to take the minimum value in the list
for num in LLA:
    if num[2]>=0:
        flag=True
        count=count+1 
        LLA_3d.append(num)
        LLA_alt.append(num[2])
    else:
        flag=False #-1, no radio occultation
        
    if flag is False and count>0:
        minalt=min(LLA_alt)
        position=LLA_alt.index(minalt)
        LLA_minalt.append(LLA_3d[position])
        count=0
        LLA_alt.clear() 
        LLA_3d.clear()

import matplotlib.pyplot as plt
LLB=pd.DataFrame((LLA_minalt))
LLB.columns=["Lon","Lat","Alt"]
Lon=LLB["Lon"]
Lat=LLB["Lat"]
plt.style.use('dark_background')
plt.plot(Lon,Lat,"c.")  
plt.title('Radio Occultation Plot')
plt.show()
LLB.head()
